definitions:
  deviceproto.Command_Payload:
    properties:
      brightness:
        type: integer
    type: object
  deviceproto.CommandRequest:
    properties:
      command_payload:
        $ref: '#/definitions/deviceproto.Command_Payload'
      device_id:
        type: string
      status:
        type: string
      timeStamp:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  deviceproto.Configuration_Settings:
    properties:
      brightness:
        type: integer
      color:
        type: string
    type: object
  deviceproto.Device:
    properties:
      configuration_settings:
        $ref: '#/definitions/deviceproto.Configuration_Settings'
      connectivity_status:
        type: string
      device_id:
        type: string
      device_name:
        type: string
      device_status:
        type: string
      device_type:
        type: string
      firmware_version:
        type: string
      last_updated:
        type: string
      location:
        type: string
      user_id:
        type: string
    type: object
  deviceproto.DeviceOperationResponse:
    properties:
      message:
        type: string
    type: object
  deviceproto.DeviceRequest:
    properties:
      configuration_settings:
        $ref: '#/definitions/deviceproto.Configuration_Settings'
      connectivity_status:
        type: string
      device_name:
        type: string
      device_status:
        type: string
      device_type:
        type: string
      firmware_version:
        type: string
      last_updated:
        type: string
      location:
        type: string
      user_id:
        type: string
    type: object
  deviceproto.DeviceResponse:
    properties:
      device_id:
        type: string
    type: object
  userproto.DeleteUserRequest:
    properties:
      user_id:
        type: string
    type: object
  userproto.ListUser:
    properties:
      user:
        items:
          $ref: '#/definitions/userproto.User'
        type: array
    type: object
  userproto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  userproto.Profile:
    properties:
      address:
        type: string
      name:
        type: string
    type: object
  userproto.Request:
    properties:
      profile:
        $ref: '#/definitions/userproto.Profile'
      user_id:
        type: string
      user_name:
        type: string
    type: object
  userproto.Res:
    properties:
      message:
        type: string
    type: object
  userproto.UpdateEmailRequest:
    properties:
      new_email:
        type: string
      old_email:
        type: string
      user_id:
        type: string
    type: object
  userproto.UpdateResponse:
    properties:
      message:
        type: string
    type: object
  userproto.UpdateUserRequest:
    properties:
      new_password:
        type: string
      old_password:
        type: string
      user_id:
        type: string
    type: object
  userproto.User:
    properties:
      email:
        type: string
      password:
        type: string
      profile:
        $ref: '#/definitions/userproto.Profile'
      user_id:
        type: string
      user_name:
        type: string
    type: object
  userproto.UserRequest:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      password:
        type: string
      profile:
        $ref: '#/definitions/userproto.Profile'
      user_name:
        type: string
    type: object
  userproto.UserResponse:
    properties:
      message:
        type: string
      token:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server for a restaurant reservation system.
  title: Artisan Connect
  version: "1.0"
paths:
  /Command:
    post:
      consumes:
      - application/json
      description: Create a new device
      parameters:
      - description: Device request body
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/deviceproto.CommandRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/deviceproto.CommandRequest'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Create a new device
      tags:
      - device
  /device:
    delete:
      consumes:
      - application/json
      description: Delete a device
      parameters:
      - description: Delete device request body
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/deviceproto.DeviceResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/deviceproto.DeviceOperationResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Delete a device
      tags:
      - device
    post:
      consumes:
      - application/json
      description: Create a new device
      parameters:
      - description: Device request body
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/deviceproto.DeviceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/deviceproto.DeviceResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Create a new device
      tags:
      - device
    put:
      consumes:
      - application/json
      description: Update a device
      parameters:
      - description: Device update request body
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/deviceproto.Device'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/deviceproto.DeviceOperationResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Update a device
      tags:
      - device
  /device/{id}:
    get:
      consumes:
      - application/json
      description: Get a device by ID
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/deviceproto.Device'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Get a device by ID
      tags:
      - device
  /login:
    post:
      consumes:
      - application/json
      description: Login a user and get a JWT token
      parameters:
      - description: Login request body
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/userproto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userproto.UserResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login a user
      tags:
      - user
  /users:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: Delete user request body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/userproto.DeleteUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userproto.UpdateResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Delete a user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userproto.ListUser'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Get all users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User request body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/userproto.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userproto.UserResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: User request body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/userproto.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userproto.UpdateResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Update a user
      tags:
      - user
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userproto.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer Auth: []
      summary: Get user by ID
      tags:
      - user
  /users/email:
    put:
      consumes:
      - application/json
      description: Update a user's email
      parameters:
      - description: Email update request body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/userproto.UpdateEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userproto.UpdateResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Update a user's email
      tags:
      - user
  /users/password:
    put:
      consumes:
      - application/json
      description: Update a user's password
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Password update request body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/userproto.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userproto.UpdateResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Update a user's password
      tags:
      - user
  /verifycode:
    post:
      consumes:
      - application/json
      description: Login a user and get a JWT token
      parameters:
      - description: Login request body
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/userproto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userproto.Res'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: VerifyCode a user
      tags:
      - user
securityDefinitions:
  Bearer:
    description: Enter the token in the format `Bearer {token}`
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
